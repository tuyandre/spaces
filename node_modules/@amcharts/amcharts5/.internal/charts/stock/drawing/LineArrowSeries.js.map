{"version":3,"file":"LineArrowSeries.js","sourceRoot":"","sources":["../../../../../../src/.internal/charts/stock/drawing/LineArrowSeries.ts"],"names":[],"mappings":"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","sourcesContent":["import { SimpleLineSeries, ISimpleLineSeriesSettings, ISimpleLineSeriesPrivate, ISimpleLineSeriesDataItem } from \"./SimpleLineSeries\";\r\n\r\nimport * as $math from \"../../../core/util/Math\";\r\nimport type { IPoint } from \"../../../core/util/IPoint\";\r\nimport { ListTemplate } from \"../../../core/util/List\";\r\nimport { Triangle } from \"../../../core/render/Triangle\";\r\nimport { Template } from \"../../../core/util/Template\";\r\n\r\nexport interface ILineArrowSeriesDataItem extends ISimpleLineSeriesDataItem {\r\n}\r\n\r\nexport interface ILineArrowSeriesSettings extends ISimpleLineSeriesSettings {\r\n\r\n\t/**\r\n\t * Show a dotted line extending from both ends of the drawn line.\r\n\t *\r\n\t * @default true\r\n\t */\r\n\tshowExtension?: boolean;\r\n}\r\n\r\nexport interface ILineArrowSeriesPrivate extends ISimpleLineSeriesPrivate {\r\n}\r\n\r\n/**\r\n * Used for Line Arrow drawing tool in [[StockChart]].\r\n *\r\n * @since 5.10.5\r\n */\r\n\r\nexport class LineArrowSeries extends SimpleLineSeries {\r\n\tpublic static className: string = \"LineArrowSeries\";\r\n\tpublic static classNames: Array<string> = SimpleLineSeries.classNames.concat([LineArrowSeries.className]);\r\n\r\n\tdeclare public _settings: ILineArrowSeriesSettings;\r\n\tdeclare public _privateSettings: ILineArrowSeriesPrivate;\r\n\tdeclare public _dataItemSettings: ILineArrowSeriesDataItem;\r\n\r\n\tprotected _arrows: Array<Triangle> = [];\r\n\r\n\tprotected _afterNew() {\r\n\t\tsuper._afterNew();\r\n\r\n\t\tthis.lines.template.set(\"forceHidden\", true);\r\n\t}\r\n\r\n\t/**\r\n\t * @ignore\r\n\t */\r\n\tpublic makeArrow(): Triangle {\r\n\t\tconst arrow = this.arrows.make();\r\n\t\tthis.mainContainer.children.push(arrow);\r\n\t\tthis.arrows.push(arrow);\r\n\t\treturn arrow;\r\n\t}\r\n\r\n\tpublic readonly arrows: ListTemplate<Triangle> = new ListTemplate(\r\n\t\tTemplate.new({}),\r\n\t\t() => Triangle._new(this._root, { themeTags: [\"arrow\"] }, [this.arrows.template])\r\n\t);\r\n\r\n\tprotected _createElements(index: number) {\r\n\t\tsuper._createElements(index);\r\n\t\tif (!this._arrows[index]) {\r\n\t\t\tconst arrow = this.makeArrow();\r\n\t\t\tthis._arrows[index] = arrow;\r\n\r\n\t\t\tlet color = this.get(\"strokeColor\", this.get(\"stroke\"));\r\n\t\t\tif (color) {\r\n\t\t\t\tarrow.set(\"fill\", color);\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\r\n\tprotected _updateLine(index: number, p11: IPoint, p22: IPoint, p1: IPoint, p2: IPoint) {\r\n\t\tsuper._updateLine(index, p11, p22, p1, p2);\r\n\t\tconst arrow = this._arrows[index];\r\n\r\n\t\tlet angle = Math.atan2(p2.y - p1.y, p2.x - p1.x);\r\n\r\n\t\t// point by 11 pixels back on a line\r\n\t\tconst p1x = p2.x - 11 * Math.cos(angle);\r\n\t\tconst p1y = p2.y - 11 * Math.sin(angle);\r\n\r\n\r\n\t\tarrow.setAll({\r\n\t\t\tx: p1x,\r\n\t\t\ty: p1y,\r\n\t\t\trotation: $math.DEGREES * angle + 90\r\n\t\t});\r\n\t}\r\n}"]}